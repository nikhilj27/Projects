{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.sass","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/about/about.component.html","webpack:///./src/app/components/about/about.component.sass","webpack:///./src/app/components/about/about.component.ts","webpack:///./src/app/components/contact/contact.component.html","webpack:///./src/app/components/contact/contact.component.sass","webpack:///./src/app/components/contact/contact.component.ts","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.sass","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/quote-text/quote-text.component.html","webpack:///./src/app/components/quote-text/quote-text.component.sass","webpack:///./src/app/components/quote-text/quote-text.component.ts","webpack:///./src/app/components/user/user.component.html","webpack:///./src/app/components/user/user.component.sass","webpack:///./src/app/components/user/user.component.ts","webpack:///./src/app/components/user/user.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-align:center\\\">\\n  <h1>\\n    Marvellous Infosystems Testing Application!\\n  </h1>\\n</div>\\n<nav>\\n  <a routerLink=\\\"/home\\\" routerLinkActive=\\\"active\\\">Home</a>\\n  <a routerLink=\\\"/users\\\" routerLinkActive=\\\"active\\\">Users</a>\\n  <a routerLink=\\\"/about\\\" routerLinkActive=\\\"active\\\">About</a>\\n  <a routerLink=\\\"/contact\\\" routerLinkActive=\\\"active\\\">Contact</a>\\n</nav>\\n<router-outlet></router-outlet>\\n\\n\"","module.exports = \"\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass']\n})\nexport class AppComponent {\n  title = 'Angular Unit Testing';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { AboutComponent } from './components/about/about.component';\nimport { ContactComponent } from './components/contact/contact.component';\nimport { QuoteTextComponent } from './components/quote-text/quote-text.component';\nimport { UserComponent } from './components/user/user.component';\n\nimport { UserService } from './components/user/user.service';\n\nconst routes: Routes = [\n  { path: 'home', component: HomeComponent },\n  { path: 'about', component: AboutComponent },\n  { path: 'contact', component: ContactComponent },\n  { path: 'users', component: UserComponent },\n  { path: '', redirectTo: '/home', pathMatch: 'full'}\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    AboutComponent,\n    ContactComponent,\n    QuoteTextComponent,\n    UserComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule.forRoot(routes)\n  ],\n  providers: [\n    UserService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<div>\\n    {{ text }}\\n</div>\"","module.exports = \"\"","import { Component } from '@angular/core';\n\n@Component({\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.sass']\n})\nexport class AboutComponent {\n  text = 'about page';\n}\n","module.exports = \"<div>\\n    {{ text }}\\n</div>\\n\\n<form id=\\\"contact-form\\\" [formGroup]=\\\"contactForm\\\" (ngSubmit)=\\\"onSubmit()\\\" novalidate>\\n  <div class=\\\"form-group\\\">\\n    <label class=\\\"center-block\\\">Name:\\n      <input class=\\\"form-control\\\" formControlName=\\\"name\\\">\\n    </label>\\n    <label class=\\\"center-block\\\">Email:\\n      <input class=\\\"form-control\\\" formControlName=\\\"email\\\">\\n    </label>\\n    <label class=\\\"center-block\\\">Text:\\n      <input class=\\\"form-control\\\" formControlName=\\\"text\\\">\\n    </label>\\n  </div>\\n    <button type=\\\"submit\\\"\\n            [disabled]=\\\"!contactForm.valid\\\" class=\\\"btn btn-success\\\">Save</button>\\n</form>\"","module.exports = \"\"","import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.sass']\n})\nexport class ContactComponent {\n    text = 'contact page';\n    contactForm: FormGroup;\n    contact = {\n        name: '',\n        email: '',\n        text: ''\n    };\n    submitted = false;\n\n    constructor() {\n        this.createForm();\n    }\n\n    createForm(): void {\n        this.contactForm = new FormGroup({\n            'name': new FormControl(this.contact.name, [\n                Validators.required,\n                Validators.minLength(4)\n            ]),\n            'email': new FormControl(this.contact.email, [\n                Validators.required,\n                Validators.email\n            ]),\n            'text': new FormControl(this.contact.text, Validators.required)\n        });\n    }\n\n    onSubmit(): void {\n        this.submitted = true;\n    }\n}\n","module.exports = \"<div>\\n      {{ text }}  \\n</div>\\n<app-quote-text [text]=\\\"quoteText\\\"></app-quote-text>\"","module.exports = \"\"","import { Component } from '@angular/core';\n\n@Component({\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.sass']\n})\nexport class HomeComponent {\n  text = 'home page';\n  quoteText = 'this text is meant to be quoted';\n}\n","module.exports = \"<q>{{ text }}</q>\"","module.exports = \"\"","import { Component, Input } from '@angular/core';\n\n@Component({\n    selector: 'app-quote-text',\n    templateUrl: './quote-text.component.html',\n    styleUrls: ['./quote-text.component.sass']\n})\nexport class QuoteTextComponent {\n    @Input() text: string;\n}\n","module.exports = \"<div *ngFor='let item of users; let i = index'>\\n    <p>{{i}} {{item.name}} - {{item.surname}}</p>\\n</div>\"","module.exports = \"\"","import { Component } from '@angular/core';\n\nimport { UserService } from './user.service';\n\n@Component({\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.sass']\n})\nexport class UserComponent {\n  text = 'user page';\n  users;\n\n  constructor(private userService: UserService) {\n    this.users = this.userService.getUsers();\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class UserService {\n  constructor() { }\n\n  getUsers(): Array<{}> {\n      return [\n          {\n              name: 'user1',\n              surname: 'usersurname1'\n          },\n          {\n              name: 'user2',\n              surname: 'usersurname2'\n          }\n      ];\n  }\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n"],"sourceRoot":""}